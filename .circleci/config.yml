version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/chaconmelgarejo/go-api-lab
    steps:
      - checkout
      - run: 
          name: Install dependencies
          command: go get github.com/gorilla/mux
      - run: 
          name: Testing ...
          command: go test -v ./...
  build:
    environment:
      IMAGE_NAME: chaconmelgarejo/go-api-lab
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    environment:
      IMAGE_NAME: chaconmelgarejo/go-api-lab
      IMAGE_SHORT_TAG: $(echo "$IMAGE_NAME:${CIRCLE_SHA1:0:7}")
    docker:
      - image: circleci/buildpack-deps:stretch  
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Show new tag
          command: echo "${CIRCLE_SHA1:0:7}" && echo $IMAGE_SHORT_TAG
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $IMAGE_NAME:latest
            docker tag $IMAGE_NAME $IMAGE_SHORT_TAG
            docker push $IMAGE_SHORT_TAG
            
workflows:
  version: 2
  build-master:
    jobs:
      - test:
          filters:
            branches:
              only: main
      - build:
          requires:
            - test
          filters:
            branches:
              only: main
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: main
